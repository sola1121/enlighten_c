编译多个源代码文件的程序


Linux/Unix系统
    一般使用GNU gcc作为C编译器, 对应命令行命令是gcc

    假设file1.c和file2.c是两个含C函数的文件, 下面命令将编译两个文件并生成一个默认名为a.out的可执行文件
    gcc file1.c file2.c

    另外还会生成两个名为file1.o, file2.o的目标文件.
    如果后来改动了file1.c, file2.c不变, 可以使用以下命令编译第一个文件并与第二个文件的目标文件合并
    gcc file1.c file2.o


DOS命令行编译器
    工作方式与Linux/Unix系统类似, 只不过使用不同名称而已.
    其中一个区别是, 对象文件的扩展名是.obj, 而不是.o.
    一些编译器生成的不是目标代码文件, 而是汇编语言或其他特殊代码的中间文件.


使用IDE编译器
    使用集成开发环境中的编译器一般表现为面向项目.
    项目(project), 描述的是特定程序使用的资源.
    资源包括源代码文件.
    这种IDE中的编译器要创建项目来运行单文件程序. 对于多文件程序, 要使用相应的菜单命令, 把源代码文件加入一个项目中.
    要确保所有的源代码文件都在项目列表中列出.
    许多IDE都不用在项目类表中列出头文件(扩展名.h的文件), 因为项目只管理使用的源代码文件.


使用头文件
    把函数原型和已定义的字符常量放在头文件中, 然后可以被多个源文件中引用共享. 
    注意, 使使用到该头文件的源文件都要引用他, 包括定义相对原型的函数, 使用这些函数等的源文件, 编译才能成功.
    有两种类型的头文件: 程序员编写的头文件和编译器自带的头文件.
    在程序中要使用头文件, 需要使用C预处理指令 #include 来引用它. 相当于将文件内容拷贝到源文件引用他的位置.
