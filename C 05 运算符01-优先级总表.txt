数据对象

用于存储值的数据存储区域统称为数据对象(data objet). C标准中唯一使用对象的概念.

左值(lvalue)
    用于标识特定数据对象的名称或表达式
    对于早期C标准, 左值意味着
        指定一个对象, 可以引用内存中的地址
        可用在赋值运算的左侧
    由于const限定符的出现, 其赋予变量只读属性, 即变量不可修改, 变为常变量. 常变量不能用在赋值运算的左侧.
    因此, 以可修改的左值(modifiable lvalue)用于标识可修改的对象. 赋值运算符的左侧应该是可修改的左值.
    当前标准建议, 使用对象定位值(object locator value)称呼可修改左值更好.

右值(rvalue)
    能赋值给可修改左值的量, 且本身不是左值.
    右值可以是常量, 变量, 或其他可求值的表达式(如,函数调用).
    当前标准在描述这一概念使用表达式的值(value of an expression), 而不是右值.

运算符操作的项, 就是运算对象(operand). 可以说=运算符左侧运算对象应该是可修改的左值.


--------------------------------------------------------------

运算符和结合性

优先级1, 左→右
    () : 圆括号
    [] : 下标运算符
    -> : 指向结构体成员运算符
    .  : 结构体成员运算符

优先级2, 左←右, 单目运算符
    !  : 逻辑非
    ~  : 按位反
    ++ : 自增
    -- : 自减
    +  : 正号
    -  : 负号
    (类型) : 类型强制转换
    *  : 指针运算符
    &  : 取地址运算符
    sizeof : 长度运算符

优先级3, 左→右, 双目运算符
    *  : 乘
    /  : 除
    %  : 取余

优先级4, 左→右, 双目运算符
    +  : 加
    -  : 减

优先级5, 左→右, 双目运算符
    << : 左移运算符
    >> : 右移运算符

优先级6, 左→右, 双目运算符
    <  : 小于
    <= : 小于等于
    >  : 大于
    >= : 大于等于

优先级7, 左→右, 双目运算符
    == : 相等于
    != : 不相等

优先级8, 左→右, 双目运算符
    &  : 按位与

优先级9, 左→右, 双目运算符
    ^  : 按位异或

优先级10, 左→右, 双目运算符
    |  : 按位或

优先级11, 左→右, 双目运算符
        Q&& : 逻辑与

优先级12, 左→右, 双目运算符
    || : 逻辑或

优先级13, 左←右, 三目运算符
    ?: : 条件运算符

优先级14, 左←右, 双目运算符
    =  : 赋值
    *= : 乘后赋值
    /= : 除后赋值
    %= : 取余后赋值
    += : 加后赋值
    -= : 减后赋值
    <<= : 左移后赋值
    >>= : 右移后赋值
    &=  : 按位与后赋值
    ^=  : 按位异或后赋值
    |=  : 按位或后赋值

优先级15, 左→右
    ,  : 顺序求值运算符


概括
    1. 圆括号, 中括号, 成员运算
    2. 逻辑非, 按位反, 自增减, 正负, 类型, 指针, 取址, sizeof

    数字的运算
    3. 乘除模
    4. 加减

    位的移动
    5. 移位

    逻辑比较
    6. 逻辑大小
    7. 逻辑相等

    位与异或
    8. 按位与
    9. 按位异或
    10. 按位或
    
    逻辑与或
    11. 逻辑与
    12. 逻辑或

    13. 条件运算
    14. 运算赋值
    15. 逗号