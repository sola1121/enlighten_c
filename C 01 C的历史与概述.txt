计算机只有正电位, 负电位两种电位状态
最开始操作计算机只能用1正, 0负表示一个代码
为了让这个过程更简单, 诞生了汇编语言, 用一些助记符来表示常用的一些二进制序列
但操作计算机依然很难, 后才出现了运用更简单的C语言
为计算机的普及奠定了基础, 为后世出现的各种编程语言提供了参考

C的起源
    时间: 1972
    地点: 美国贝尔实验室
    创始人: 丹尼斯 里奇(Dennis Ritch), 肯 汤普逊(Ken Thompson)

C的应用领域
    嵌入式
    操作系统开发
    驱动程序开发
    数据库开发
    开发其他编程语言
    图形图像
    高性能计算

C的优点
    面向过程编程
    结构化, 模块化
    高效性, 具备比肩汇编的性能
    可移植性, 使用C编译器, 可以把C转换为对应设备的计算机内部指令
    可以访问硬件, 操控内存中的位

C的缺点
    太自由
    指针容易出问题
    写出来的代码不易阅读(甚至还有专门的比赛IOCCC国际C语言混淆代码比赛)

语言标准
    美国国家标准协会(ANSI)开发, 国际标准化组织(ISO)采用认可
        C89/C90
    ADSI/ISO联合委员会
        C99
    C语言标准委员会
        C11

C属于编译型语言
    定义程序目标 -> 设计程序 -> 编写代码 -> 编译 -> 运行程序 -> 测试和调试程序 -> 维护和修改

目标代码文件, 可执行文件, 库
    一般C的实现通过编译和链接将源代码文件转化为可执行文件.
    编译器将源代码转换成中间代码, 连接器把中间代码和其他代码合并, 生成可执行文件.
    中间代码有多种形式, 一般是将源代码转化为机器语言代码, 并把结果放在目标文件(或叫目标代码文件)中.
    中间代码缺失启动代码和函数库. 启动代码充当程序和操作系统之间的接口. 函数库包含众多运行时函数.
    链接器将目标代码, 系统的标准启动代码, 库代码3部分合成一个可执行文件.

.c表示C的源文件, .h表示C的头文件

C的编译器
    GNU gcc, VC++ MSVC, LLVM Clang