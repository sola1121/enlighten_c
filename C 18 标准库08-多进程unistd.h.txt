进程是资源分配的最小单位, 线程是程序执行的最小单位

进程是一个程序的一个实例, 拥有自己独立的各种段(数据段，代码段等等), 每次创建一个进程需要从操作系统分配这些资源给他, 消耗一定的时间.
在linux下C语言创建一个进程使用fork()函数, 该函数被定义在unistd.h头文件中


1. 多进程 unistd.h


 创建进程有两种方式，一是由操作系统创建；二是由父进程创建。操作系统创建的进程，它们之间是平等的，一般不存在资源继承关系。而由父进程创建的进程（子进程），它们和父进程存在隶属关系。子进程又可以创建进程，形成一个进程家族。

      系统调用fork是创建一个新进程的唯一方法。进程调用fork函数就创建了一个子进程。

      创建了一个子进程之后，父进程和子进程争夺CPU，抢到CPU者执行，另外一个挂起等待。若要父进程等待子进程执行完毕后再继续执行，可以在fork操作之后调用wait或waitpid。

      

      fork函数
        #include <sys/types.h>
        #include <unistd.h>
        
        pid_t fork(void);


